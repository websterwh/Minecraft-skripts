options:
	# <!> WARNING <!>
	# do NOT change this once you have released items with enchants!
	# Items that have the old enchant color will NOT work!
	Enchant Color: &b
	
	# The location of the script
	# If the script is in a folder, set this to "<folder name>/"
	File Location: CustomEnchants
	
# IMPORTANT: All chances are WITHOUT the % sign

# ————————————————————————————————————————————————————————

# Explode
	# Should the "Explode" enchant ONLY explode ores AND ore block types (diamond blocks, gold blocks, etc)?
	Ores only: true

	Explode 1 Radius: 1
	Explode 2 Radius: 1.5
	Explode 3 Radius: 2
	Explode 4 Radius: 2.25
	Explode 5 Radius: 2.5
	Explode 6 Radius: 3
	Explode 7 Radius: 3.25

# Luck of the Draw
	LOTD 1 Chance: 15%
	LOTD 2 Chance: 25%
	LOTD 3 Chance: 30%
	LOTD 4 Chance: 45%
	LOTD 5 Chance: 50%

# Bomber
	Bomber Chance: 25%
	Bomber Explosion Power: 2
	# How much should players within the explosion radius get damaged?
	Bomber Damage: 4

# Sniper
	Sniper Speed: 5

# ————————————————————————————————————————————————————————

# Do not touch the lines below this please :)
	PossibleEnchants: Explode (explode), Telepathy (tele), Unbreakable (unb || break), Luck of the Draw (LOTD || luck), Team (team), Bomber (bomb || bomber), Sniper (snipe || sniper)
	Enchants: "Explode", "Telepathy", "Unbreakable", "Luck of the Draw", "Team", "Bomber", and "Sniper"

command /customenchants [<text>] [<text>] [<int>]:
	aliases: ce
	permission: ce.*
	permission message: &cYou don't have permission to do that!
	executable by: players
	trigger:
		if arg-1 is not set:
			send formatted "&8————————————————————————"
			send formatted "<sgt:/ce add ><tooltip:Click me to get the command!>&7/ce add (enchant) (level) - Add an enchant to a tool"
			send formatted "<sgt:/ce remove ><tooltip:Click me to get the command!>&7/ce remove (enchant) - Remove an enchant from your tool"
			send formatted "<sgt:/ce info><tooltip:Click me to get the command!>&7/ce info (enchant) - Get info about a specific enchant"
			send formatted "<cmd:/ce list><tooltip:Click me to get a list of enchants!>&7/ce list - Get a list of possible enchants"
			send formatted "<cmd:/ce support><tooltip:Click me to get support!>&7/ce support - Get support for this script"
			send formatted "<cmd:/ce gui><tooltip:Click me to open the Enchant Manager GUI!>&7/ce gui - Open a GUI where you can manage enchants"
			send formatted "<cmd:/ce reload><tooltip:Click me to reload the script!>&7/ce reload - Reload the script"
			send formatted "&8————————————————————————"
			stop
		else if arg-1 is "list":
			send "&2Possible Enchants: &a{@PossibleEnchants}"
			stop
# ————————————————————————

# INFO CATEGORY
		else if arg-1 is "info":
			if arg-2 is not set:
				send "&2Possible Enchants: &a{@PossibleEnchants}"
				stop
			else if arg-2 is "explode":
				send "&2Info about &2&lExplode&2: &aChance of exploding a small radius around you."
				stop
			else if arg-2 is "tele" or "telepathy":
				send "&2Info about &2&lTelepathy&2: &aWhen you mine a block, it goes directly to your inventory."
				stop
			else if arg-2 is "unb" or "unbreakable" or "break":
				send "&2Info about &2&lUnbreakable&2: &aMakes your tool unbreakable."
				stop
			else if arg-2 is "lotd" or "luck":
				send "&2Info about &2&lLuck of the Draw&2: &aChance of multiplying the drops."
			else if arg-2 is "team":
				send "&2Info about &2&lTeam&2: &aTests to see if both the attacker and the victim have the same level of this enchant. If they do, the damage is cancelled."
			else if arg-2 is "bomber" or "bomb":
				send "&2Info about &2&lBomber&2: &aChance of making an explosion when hit with an arrow."
			else if arg-2 is "snipe" or "sniper":
				send "&2Info about &2&lSniper&2: &aWhen you shift with a bow in your hand, your FOV zooms in, and you can launch arrows at fast speeds"
				send "&2&lNOTE:&a The level of the enchant that you have is the speed that the arrow will fire!"
			else if arg-2 is "team":
				send "&2Info about &2&lTeam&2: &aAdds ""teams"" to Minecraft (read next line)"
				send "&2&lNOTE:&a The level of the enchant that you have is the team number. If two players have the same team number, then they will not be able to damage each other."
			else:
				send "&2Possible Enchants: &a{@PossibleEnchants}"

# ————————————————————————
# RELOAD
		else if arg-1 is "reload" or "rl":
			if arg-2 is not set:
				execute player command "/sk reload {@File Location}"
			else:
				execute player command "/sk reload {@File Location}%arg-2%"
# ————————————————————————

# GUI
		else if arg-1 is "gui" or "manage" or "manager":
			CE_openManager(player)

# REMOVE CATEGORY

		else if arg-1 is "remove":
			if arg-2 is set:
				if arg-2 is not "lotd":
					if "%lore of player's tool%" contains arg-2:
						if "%lore of player's tool%" is not "<none>":
							set {_removeLoreLine} to CE_getLoreLine(player, arg-2)
							delete line {_removeLoreLine} of lore of player's tool
							send "&aRemoved the enchant!"
						else:
							send "&cEnchant not found!"
					else:
						send "&cEnchant not found!"
				else:
					if "%lore of player's tool%" is not "<none>":
						set {_removeLoreLine} to CE_getLoreLine(player, "Luck")
						delete line {_removeLoreLine} of lore of player's tool
						send "&aRemoved the enchant!"
					else:
						send "&cEnchant not found!"
			else:
				send "&cYou need to supply an enchant to remove!"

# ————————————————————————

# ADD/APPLY CATEGORY
		else if arg-1 is "add" or "apply":
			if player's held item is air:
				send "&cPlease hold an item!"
				stop
			else if arg-2 is not set:
				make player say "/ce"
				stop
			
# EXPLODE
			else if arg-2 is "explode":
				if player's held item is a pickaxe or an axe or a shovel:
					set {_ifLore} to CE_getLoreLine(player, "Explode")
					if {_ifLore} is set:
						send "&cYou already have this enchant on your tool!"
						stop
					if arg-3 is not set:
						CE_applyEnchant(player, "Explode 1")
					if arg-3 is set:
						if arg-3 is 1:
							execute player command "/ce add explode"
							stop
						if arg-3 <= 7:
							CE_applyEnchant(player, "Explode %arg-3%")
						else:
							send "&cNeed a lesser enchant value!"
							stop
				else:
					send "&cYou need to hold a pickaxe, an axe, or a shovel to use this enchant!"
# TELEPATHY
			else if arg-2 is "tele" or "telepathy":
				set {_ifLore} to CE_getLoreLine(player, "Telepathy")
				if {_ifLore} is set:
					send "&cYou already have this enchant on your tool!"
					stop
				if player's held item is a pickaxe or an axe or a shovel:
					CE_applyEnchant(player, "Telepathy")
				else:
					send "&cYou need to hold a pickaxe, an axe, or a shovel to use this enchant!"
			
# UNBREAKABLE
			else if arg-2 is "unb" or "break" or "unbreakable":
				set {_ifLore} to CE_getLoreLine(player, "Unbreakable")
				if {_ifLore} is set:
					send "&cYou already have this enchant on your tool!"
					stop
				CE_applyEnchant(player, "Unbreakable")

# LUCK OF THE DRAW
			else if arg-2 is "lotd" or "luck":
				set {_ifLore} to CE_getLoreLine(player, "Luck of the Draw")
				if {_ifLore} is set:
					send "&cYou already have this enchant on your tool!"
					stop
				if player's held item is a pickaxe or an axe or a shovel:
					if arg-3 is not set:
						CE_applyEnchant(player, "Luck of the Draw 1")
					else if arg-3 <= 5:
						CE_applyEnchant(player, "Luck of the Draw %arg-3%")
					else:
						send "&cNeed a lesser enchant value!"
				else:
					send "&cYou need to hold a pickaxe, an axe, or a shovel to use this enchant!"
			
# TEAM
			else if arg-2 is "team":
				set {_ifLore} to CE_getLoreLine(player, "Team")
				if {_ifLore} is set:
					send "&cYou already have this enchant on your tool!"
					stop
				if player's held item is a chestplate:
					if arg-3 is not set:
						CE_applyEnchant(player, "Team 1")
					else:
						CE_applyEnchant(player, "Team %arg-3%")
				else:
					send "&cYou need to hold a chestplate to use this enchant!"

# BOMBER
			else if arg-2 is "bomber" or "bomb":
				if "%player's tool%" contains "bow":
					CE_applyEnchant(player, "Bomber")
				else:
					send "&cYou need to hold a bow or crossbow to use this enchant!"
				
# SNIPER
			else if arg-2 is "snipe" or "sniper":
				set {_ifLore} to CE_getLoreLine(player, "Sniper")
				if {_ifLore} is set:
					send "&cYou already have this enchant on your tool!"
					stop
				if  player's tool is a bow:
					if arg-3 is not set:
						CE_applyEnchant(player, "Sniper 1")
					else:
						CE_applyEnchant(player, "Sniper %arg-3%")
				else:
					send "&cYou need to hold a bow to use this enchant!"

# SUPPORT
		else if arg-1 is "support" or "discord":
			send formatted "<link:https://discord.gg/gkbfB6V>&aDo you need support for Custom Enchants? Click here to join my discord!"

		else:
			execute player command "/ce"
# ————————————————————————

# ACTIONS CATEGORY

on script load:
	delete {Enchants::*}
	set {Enchants::*} to {@Enchants}

# EXPLODE
on mine:	
	if "%lore of player's tool%" contains "{@Enchant Color}Explode":
		set {_oresOnly} to {@Ores only}
		if "%lore of player's tool%" contains "{@Enchant Color}Explode 1":
			loop blocks in radius {@Explode 1 Radius} around event-block:
				if {_oresOnly} is true:
					if loop-block is an ore or an iron block or a gold block or a diamond block or a netherite block:
						create a fake explosion at loop-block
						give loop-block to player
						set loop-block to air
				else:
					create a fake explosion at loop-block
					give loop-block to player
					set loop-block to air
		else if "%lore of player's tool%" contains "{@Enchant Color}Explode 2":
			loop blocks in radius {@Explode 2 Radius} around event-block:
				if {_oresOnly} is true:
					if loop-block is an ore or an iron block or a gold block or a diamond block or a netherite block:
						create a fake explosion at loop-block
						give loop-block to player
						set loop-block to air
				else:
					create a fake explosion at loop-block
					give loop-block to player
					set loop-block to air
		else if "%lore of player's tool%" contains "{@Enchant Color}Explode 3":
			loop blocks in radius {@Explode 3 Radius} around event-block:
				if {_oresOnly} is true:
					if loop-block is an ore or an iron block or a gold block or a diamond block or a netherite block:
						create a fake explosion at loop-block
						give loop-block to player
						set loop-block to air
				else:
					create a fake explosion at loop-block
					give loop-block to player
					set loop-block to air
		else if "%lore of player's tool%" contains "{@Enchant Color}Explode 4":
			loop blocks in radius {@Explode 4 Radius} around event-block:
				if {_oresOnly} is true:
					if loop-block is an ore or an iron block or a gold block or a diamond block or a netherite block:
						create a fake explosion at loop-block
						give loop-block to player
						set loop-block to air
				else:
					create a fake explosion at loop-block
					give loop-block to player
					set loop-block to air
		else if "%lore of player's tool%" contains "{@Enchant Color}Explode 5":
			loop blocks in radius {@Explode 5 Radius} around event-block:
				if {_oresOnly} is true:
					if loop-block is an ore or an iron block or a gold block or a diamond block or a netherite block:
						create a fake explosion at loop-block
						give loop-block to player
						set loop-block to air
				else:
					create a fake explosion at loop-block
					give loop-block to player
					set loop-block to air
		else if "%lore of player's tool%" contains "{@Enchant Color}Explode 6":
			loop blocks in radius {@Explode 6 Radius} around event-block:
				if {_oresOnly} is true:
					if loop-block is an ore or an iron block or a gold block or a diamond block or a netherite block:
						create a fake explosion at loop-block
						give loop-block to player
						set loop-block to air
				else:
					create a fake explosion at loop-block
					give loop-block to player
					set loop-block to air
		else if "%lore of player's tool%" contains "{@Enchant Color}Explode 7":
			loop blocks in radius {@Explode 7 Radius} around event-block:
				if {_oresOnly} is true:
					if loop-block is an ore or an iron block or a gold block or a diamond block or a netherite block:
						create a fake explosion at loop-block
						give loop-block to player
						set loop-block to air
				else:
					create a fake explosion at loop-block
					give loop-block to player
					set loop-block to air

# TELEPATHY
	if "%lore of player's tool%" contains "{@Enchant Color}Telepathy":
		give drops of event-block using player's tool to player
		cancel drops

# LUCK OF THE DRAW
	if "%lore of player's tool%" contains "{@Enchant Color}Luck of the Draw":
		if "%lore of player's tool%" contains "{@Enchant Color}Luck of the Draw 1":
			chance of {@LOTD 1 Chance}:
				set {_drops::*} to the drops of event-block using player's tool
				cancel drops
				drop {_drops::*} at event-location
				drop {_drops::*} at event-location
		else if "%lore of player's tool%" contains "{@Enchant Color}Luck of the Draw 2":
			chance of {@LOTD 2 Chance}:
				set {_drops::*} to the drops of event-block using player's tool
				cancel drops
				drop {_drops::*} at event-location
				drop {_drops::*} at event-location
		else if "%lore of player's tool%" contains "{@Enchant Color}Luck of the Draw 3":
			chance of {@LOTD 3 Chance}:
				set {_drops::*} to the drops of event-block using player's tool
				cancel drops
				drop {_drops::*} at event-location
				drop {_drops::*} at event-location
		else if "%lore of player's tool%" contains "{@Enchant Color}Luck of the Draw 4":
			chance of {@LOTD 4 Chance}:
				set {_drops::*} to the drops of event-block using player's tool
				cancel drops
				drop {_drops::*} at event-location
				drop {_drops::*} at event-location
		else if "%lore of player's tool%" contains "{@Enchant Color}Luck of the Draw 5":
			chance of {@LOTD 5 Chance}:
				set {_drops::*} to the drops of event-block using player's tool
				cancel drops
				drop {_drops::*} at event-location
				drop {_drops::*} at event-location

# UNBREAKABLE
on item damage:
	if "%lore of player's tool%" contains "{@Enchant Color}Unbreakable":
		cancel event

on damage:
	if attacker's chestplate is not air:
		#broadcast "attacker not air"
		if "%lore of attacker's chestplate%" contains "{@Enchant Color}Team":
			set {_attackerTeam} to CE_getEnchantLevelOnChestplate(attacker, "Team")
			if victim's chestplate is not air:
				#broadcast "victim not air"
				if "%lore of victim's chestplate%" contains "{@Enchant Color}Team":
					set {_victimTeam} to CE_getEnchantLevelOnChestplate(victim, "Team")
					#broadcast "%{_attackerTeam}%"
					#broadcast "%{_victimTeam}%"
					if {_attackerTeam} = {_victimTeam}:
						cancel event

# BOMBER (Part 1)
on shoot:
	projectile is an arrow
	chance of {@Bomber Chance}:
		if "%lore of shooter's tool%" contains "{@Enchant Color}Bomber":
			set {Lore::%shooter's uuid%::*} to "%lore of shooter's tool%"

# SNIPER (Part 1)
	if shooter is sneaking:
		if "%lore of shooter's tool%" contains "{@Enchant Color}Sniper":
			if {Shooting::%shooter%} is not set:
				set {Shooting::%shooter%} to true
				cancel event
				remove 1 arrow from shooter's inventory
				set {_sniperSpeed} to CE_getEnchantLevel(shooter, "Sniper")
				shoot an arrow from shooter at speed {_sniperSpeed}
		
# BOMBER (Part 2)
on projectile hit:
	if "%{Lore::%shooter's uuid%::*}%" contains "{@Enchant Color}Bomber":
		delete {Lore::%shooter's uuid%::*}
		make a safe explosion with power {@Bomber Explosion Power} at event-location
		loop all players in radius {@Bomber Explosion Power} of projectile:
			damage loop-player by {@Bomber Damage}

# SNIPER (Part 2)
	if {Shooting::%shooter%} is set:
		delete {Shooting::%shooter%}

on sneak toggle:
	if player is not sneaking:
		if player's tool is a bow:
			if "%lore of player's tool%" contains "{@Enchant Color}Sniper":
				apply potion of slowness 255 without particles to player for 1 day
	else:
		if "%lore of player's tool%" contains "{@Enchant Color}Sniper":
			remove slowness from player

# ————————————————————————

# FUNCTIONS

function CE_getEnchantLevel(p: player, enchant: text) :: number:
	set {_lore::*} to lore of {_p}'s tool
	set {_size} to size of {_lore::*}
	loop {_size} times:
		if {_lore::%loop-number%} contains "{@Enchant Color}%{_enchant}%":
			set {_loreLine} to loop-number
			stop loop
		else:
			return 0
	set {_enchantLevel} to the last character of {_lore::%{_loreLine}%}
	set {_enchantLevel} to {_enchantLevel} parsed as a number
	return {_enchantLevel}

function CE_getEnchantLevelOnChestplate(p: player, enchant: text) :: number:
	set {_lore::*} to lore of {_p}'s chestplate
	set {_size} to size of {_lore::*}
	loop {_size} times:
		if {_lore::%loop-number%} contains "{@Enchant Color}%{_enchant}%":
			set {_loreLine} to loop-number
			stop loop
		else:
			return 0
	set {_enchantLevel} to the last character of {_lore::%{_loreLine}%}
	set {_enchantLevel} to {_enchantLevel} parsed as a number
	return {_enchantLevel}

function CE_applyEnchant(p: player, type: text):
	set {_item} to {_p}'s held item
	set {_slot} to index of {_p}'s hotbar slot
	set {_lore::*} to lore of {_p}'s tool
	set slot {_slot} of {_p} to air
	add "{@Enchant Color}%{_type}%" to {_newLore::*}
	add {_lore::*} to {_newLore::*}
	set slot {_slot} of {_p}'s inventory to {_item} with lore {_newLore::*}
	stop

function CE_getLoreLine(p: player, testFor: text) :: number:
	set {_lore::*} to lore of {_p}'s tool
	set {_size} to size of {_lore::*}
	set {_loopTimes} to 0
	loop {_size} times:
		if {_lore::%loop-number%} contains "{@Enchant Color}%{_testFor}%":
			set {_loreLine} to loop-number
			return {_loreLine}
			stop loop
		else:
			if {_loopTimes} >= {_size}:
				return 0

function CE_openManager(p: player):
	if {_p}'s tool is not a block:
		set {_CE_Manager} to a new chest inventory with 3 row with name "{@Enchant Color}&lCE Manager - Home"

		loop 27 times:
			set slot (loop-number - 1) of {_CE_Manager} to black stained glass pane named "&a"
		set slot 10 of {_CE_Manager} to lime concrete named "&aAdd an enchant"
		set slot 13 of {_CE_Manager} to {_p}'s tool
		set slot 16 of {_CE_Manager} to red concrete named "&cRemove an enchant"
		set slot 26 of {_CE_Manager} to barrier named "&4Close"

		open {_CE_Manager} to {_p}
	else:
		send "&cHold a tool to enchant!" to {_p}

function CE_openAddEnchantGUI(p: player):
	close {_p}'s inventory
	set {_addEnchantGUI} to a new chest inventory with 3 rows with name "&a&lCE Manager - Add"
	loop 27 times:
		set slot (loop-number - 1) of {_addEnchantGUI} to black stained glass pane named "&a"
	set {_format} to 10
	loop {Enchants::*}:
		if loop-value is not "Team" or "Sniper":
			set slot {_format} of {_addEnchantGUI} to lime concrete named "&a%loop-value%"
		else if loop-value is "Sniper":
			set slot {_format} of {_addEnchantGUI} to lime concrete named "&a%loop-value%" with lore "&7The level of which you specify" and "&7will be the amount of power the arrow has!"
		else if loop-value is "Team":
			set slot {_format} of {_addEnchantGUI} to lime concrete named "&a%loop-value%" with lore "&7The level of which you specify" and "&7will be the team number of the player!" and "&7If two players have the same value of ""Team""," and "&7then the damage will be cancelled!"
		add 1 to {_format}
	set slot 26 of {_addEnchantGUI} to barrier named "&4Go Back"
	open {_addEnchantGUI} to {_p}

function CE_openRemoveEnchantGUI(p: player):
	close {_p}'s inventory
	set {_removeEnchantGUI} to a new chest inventory with 3 rows with name "&c&lCE Manager - Remove"
	loop 27 times:
		set slot (loop-number - 1) of {_removeEnchantGUI} to black stained glass pane named "&a"
	set {_formatRemove} to 10
	loop {Enchants::*}:
		set slot {_formatRemove} of {_removeEnchantGUI} to red concrete named "&c%loop-value%"
		add 1 to {_formatRemove}
	set slot 26 of {_removeEnchantGUI} to barrier named "&4Go Back"
	open {_removeEnchantGUI} to {_p}

function CE_openExplodeGUI(p: player):
	close {_p}'s inventory
	set {_explodeGUI} to a new chest inventory with 3 rows with name "&a&lCE Manager - Explode"
	loop 27 times:
		set slot (loop-number - 1) of {_explodeGUI} to black stained glass pane named "&a"
	set {_formatExplode} to 10
	loop 7 times:
		set slot {_formatExplode} of {_explodeGUI} to tnt named "&aExplode %{_formatExplode} - 9%"
		add 1 to {_formatExplode}
	set slot 26 of {_explodeGUI} to barrier named "&4Go Back"
	open {_explodeGUI} to {_p}

function CE_openLuckGUI(p: player):
	close {_p}'s inventory
	set {_LOTD_GUI} to a new chest inventory with 3 rows with name "&a&lCE Manager - LOTD"
	loop 27 times:
		set slot (loop-number - 1) of {_LOTD_GUI} to black stained glass pane named "&a"
		add 1 to {_formatLOTD}
	set slot 11 of {_LOTD_GUI} to coal named "&aLuck of the Draw 1"
	set slot 12 of {_LOTD_GUI} to iron ingot named "&aLuck of the Draw 2"
	set slot 13 of {_LOTD_GUI} to gold ingot named "&aLuck of the Draw 3"
	set slot 14 of {_LOTD_GUI} to lapis named "&aLuck of the Draw 4"
	set slot 15 of {_LOTD_GUI} to diamond named "&aLuck of the Draw 4"
	set slot 26 of {_LOTD_GUI} to barrier named "&4Go Back"
	open {_LOTD_GUI} to {_p}

on inventory click:
	if name of event-inventory is "&a&lCE Manager - LOTD":
		cancel event
		if name of event-item is "&aLuck of the Draw 1":
			execute player command "/ce add lotd 1"
		else if name of event-item is "&aLuck of the Draw 2":
			execute player command "/ce add lotd 2"
		else if name of event-item is "&aLuck of the Draw 3":
			execute player command "/ce add lotd 3"
		else if name of event-item is "&aLuck of the Draw 4":
			execute player command "/ce add lotd 4"
		else if name of event-item is "&aLuck of the Draw 5":
			execute player command "/ce add lotd 5"
		else if event-item is barrier:
			CE_openAddEnchantGUI(player)
	else if name of event-inventory contains "CE Manager":
		cancel event
		if name of event-item is "&aAdd an enchant":
			CE_openAddEnchantGUI(player)
		else if name of event-item is  "&cRemove an enchant":
			CE_openRemoveEnchantGUI(player)
		else if event-item is tnt:
			if name of event-item is "&aExplode 1":
				execute player command "/ce add explode 1"
			else if name of event-item is "&aExplode 2":
				execute player command "/ce add explode 2"
			else if name of event-item is "&aExplode 3":
				execute player command "/ce add explode 3"
			else if name of event-item is "&aExplode 4":
				execute player command "/ce add explode 4"
			else if name of event-item is "&aExplode 5":
				execute player command "/ce add explode 5"
			else if name of event-item is "&aExplode 6":
				execute player command "/ce add explode 6"
			else if name of event-item is "&aExplode 7":
				execute player command "/ce add explode 7"
		else if event-item is barrier:
			if name of event-inventory is "&a&lCE Manager - Add" or "&c&lCE Manager - Remove":
				CE_openManager(player)
			else if name of event-inventory is "&a&lCE Manager - Explode":
				CE_openAddEnchantGUI(player)
			else:
				close player's inventory
		else if name of event-item is not "&a":
			if event-item is red concrete:
				if name of event-item contains "Luck of the Draw":
					execute player command "/ce remove lotd"
					stop
				loop {Enchants::*}:
					if name of event-item contains loop-value:
						execute player command "/ce remove %uncolored loop-value%"
			else if event-item is lime concrete:
				if name of event-item contains "Luck of the Draw":
					CE_openLuckGUI(player)
					stop
				else if name of event-item contains "Explode":
					CE_openExplodeGUI(player)
					stop
				else if name of event-item contains "Team":
					close player's inventory
					send formatted "<sgt:/ce add team >&aClick me and type in what value of the ""Team"" enchant you want!"
					stop
				else if name of event-item contains "Sniper":
					close player's inventory
					send formatted "<sgt:/ce add sniper >&aClick me and type in what value of the ""Sniper"" enchant you want!"
					stop
				loop {Enchants::*}:
					if name of event-item contains loop-value:
						execute player command "/ce add %uncolored loop-value%"